definitions:
  console:
    cls: Consoloid.Ui.Console
    options:
      css: "%console.css%"
      welcomeMessage: "%console.welcomeMessage%"
    shared: true
  dialogLauncher:
    cls: "%console.launcher.cls%"
    options: "%console.launcher%"
    shared: true
  autocomplete_advisor:
    cls: Consoloid.Interpreter.Advisor
    shared: true
  tokenizer:
    cls: Consoloid.Interpreter.Tokenizer
    shared: true
  letter_tree:
    cls: Consoloid.Interpreter.LetterTree
    shared: true
  context:
    cls: Consoloid.Context.Queue
    shared: true
  context_type_expector:
    cls: Consoloid.Context.ExpectTypes
  translator:
    cls: Consoloid.I18n.ClientSideTranslator
    options:
      language: "%translator.lang%"
    shared: true
    tags: [ "console-bootstrap" ]
  prompt:
    cls: Consoloid.Ui.Prompt
    shared: true
  sentence_reference_listener:
    cls: Consoloid.Ui.ExpressionReferenceListener
    tags: [ "console-bootstrap" ]
    shared: true
  type_writer:
    cls: Consoloid.Ui.TypeWriter
    options:
      longTime: "%type_writer.longTime%"
      shortTime: "%type_writer.shortTime%"
    shared: true
  speech_recognizer:
    cls: Consoloid.Speech.Recognizer
    options:
      language: "%translator.lang%"
    shared: true
  webkit_speech_recognition:
    cls: Consoloid.Speech.RecognizerEngine.Webkit
  speech_grammer_fixer:
    cls: Consoloid.Speech.GrammerFixer
    options:
      fixList: "%speech.grammer_fix_list%"
  speech_prompt_button:
    cls: Consoloid.Speech.PromptInputButton
    options:
      recognizer: "@speech_recognizer"
      prompt: "@prompt"
      grammerFixer: "@speech_grammer_fixer"
  list_sentences_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: list_sentences
      patterns:
        - What sentences can I tell
        - List available sentences
        - Which sentences contain word <word>
        - Which sentences are in topic <topic>
      arguments:
        word:
          type: string
          pattern: containing word <value>
          required: false
        topic:
          type: string
          pattern: from topic <value>
          required: false
  list_sentences:
    cls: Consoloid.Topic.SentenceListing.Dialog
    options:
      name: Available sentences
      list: '@list_sentences_list'

  list_sentences_list:
    cls: Consoloid.Ui.List.Widget
    options:
      dataSourceClass: Consoloid.Topic.SentenceListing.DataSource
      dataSourceOptions: {}
      factoryClass: Consoloid.Ui.List.Factory.Collapsing
      factoryOptions:
        templateId: Consoloid-Topic-SentenceListing-CollapsingItem
        collapsedTemplateId: Consoloid-Topic-SentenceListing-ItemCollapsed
        extendedTemplateId: Consoloid-Topic-SentenceListing-ItemOpened
      listViewClass: Consoloid.Ui.List.View.BoundaryShowing
      listViewOptions:
        radius: 2
        numPerPage: 5
      scrollbarClass: Consoloid.Ui.List.Scrollbar.Base
      scrollbarOptions: {}
      filterWidgetClass: Consoloid.Ui.List.BaseFilterWidget
      filterWidgetOptions:
        templateId: Consoloid-Topic-SentenceListing-FilterWidget
      filterTokenizerClass: Consoloid.Ui.List.BaseFilterTokenizer
      filterTokenizerOptions:
        keys:
          - word
          - topic

  default_fallback_sentence:
    cls: Consoloid.Interpreter.Sentence
    options:
      service: default_fallback_dialog
      patterns: [ "Fallback sentence" ]
      arguments:
        text:
          type: string
          pattern: text <value>
          required: false
  default_fallback_dialog:
    cls: Consoloid.Topic.FallbackDialog
  default_ambiguousity_avoider_sentence:
    cls: Consoloid.Interpreter.Sentence
    options:
      service: default_ambiguousity_avoider_dialog
      patterns: [ "Ambiguousity avoider" ]
      arguments:
        text:
          type: string
          pattern: text <value>
          required: false
        options:
          type: array
          pattern: none
          required: false
  default_ambiguousity_avoider_dialog:
    cls: Consoloid.Topic.AmbiguousityAvoiderDialog
  default_argument_fixer_sentence:
    cls: Consoloid.Interpreter.Sentence
    options:
      service: default_argument_fixer_reader_dialog
      patterns: [ "Missing argument reader" ]
      arguments:
        text:
          type: string
          pattern: text <value>
          required: false
        options:
          type: array
          pattern: none
          required: false
  default_argument_fixer_reader_dialog:
    cls: Consoloid.Ui.ArgumentFixerDialog
  list_topics_dialog:
    cls: Consoloid.Topic.ListDialog
  list_topics_sentence:
    cls: Consoloid.Interpreter.Sentence
    tags: [ "sentence" ]
    options:
      service: list_topics_dialog
      patterns: [ "List topics" ]
      arguments:
        loaded:
          type: boolean
          pattern: only loaded
          required: false
        available:
          type: boolean
          pattern: only available
          required: false
  describe_current_topics_sentence:
    cls: Consoloid.Interpreter.Sentence
    tags: [ "sentence" ]
    options:
      service: list_topics_dialog
      method: startWithLoadedOnly
      patterns: [ "Describe current topics" ]
      arguments: {}
  list_available_topics_sentence:
    cls: Consoloid.Interpreter.Sentence
    tags: [ "sentence" ]
    options:
      service: list_topics_dialog
      method: startWithAvailableOnly
      patterns: [ "List available topics" ]
      arguments: {}
  load_topic_dialog:
    cls: Consoloid.Topic.LoadDialog
  load_topic_sentence:
    cls: Consoloid.Interpreter.Sentence
    tags: [ "sentence" ]
    options:
      service: load_topic_dialog
      patterns:
        - Load topic
        - Load topic <name>
      arguments:
        name:
          type: string
          pattern: name <value>
          required: true
  submit_form_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.ContextDependSentence
    options:
      service: submit_form_dialog
      patterns:
        - Submit form
        - Submit form with name <name>
      arguments:
        name:
          type: Consoloid.Form.ContextObject
          pattern: named <value>
          required: false
      requiredContextIsAvailable:
        options:
          types: [ Consoloid.Form.ContextObject ]
  submit_form_dialog:
    cls: Consoloid.Ui.Form.SubmitDialog
  list_form_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: list_form_dialog
      patterns:
        - List forms
      arguments: {}
  list_form_dialog:
    cls: Consoloid.Ui.Form.ListDialog

  session_reset_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: session_reset_dialog
      patterns:
        - Reset session
        - Restart Consoloid
      arguments: {}
  session_reset_dialog:
    cls: Consoloid.Ui.SessionResetDialog

  switch_page_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.ContextDependSentence
    options:
      service: switch_page_dialog
      patterns:
        - Turn page
        - Turn to page <page>
        -
          pattern: Turn to first page
          fixedArguments:
            page: first
        -
          pattern: Turn to previous page
          fixedArguments:
            page: previous
        -
          pattern: Turn to next page
          fixedArguments:
            page: next
        -
          pattern: Turn to last page
          fixedArguments:
            page: last
      arguments:
        name:
          type: Consoloid.Ui.List.Dialog.ContextObject
          pattern: list named <value>
          required: false
        page:
          type: string
          pattern: to page <value>
          required: true
      requiredContextIsAvailable:
        options:
          types: [ Consoloid.Ui.List.Dialog.ContextObject ]
  switch_page_dialog:
    cls: Consoloid.Ui.List.Dialog.Paging
  list_filter_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.ContextDependSentence
    options:
      service: list_filter_dialog
      patterns:
        - Filter for <filter>
        - Search for <filter>
      arguments:
        name:
          type: Consoloid.Ui.List.Dialog.ContextObject
          pattern: list named <value>
          required: false
        filter:
          type: string
          pattern: for <value>
          required: true
      requiredContextIsAvailable:
        options:
          types: [ Consoloid.Ui.List.Dialog.ContextObject ]
  list_filter_dialog:
    cls: Consoloid.Ui.List.Dialog.Filter
  list_further_filter_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.ContextDependSentence
    options:
      service: list_further_filter_dialog
      patterns:
        - Further filter for <filter>
        - Further search for <filter>
      arguments:
        name:
          type: Consoloid.Ui.List.Dialog.ContextObject
          pattern: list named <value>
          required: false
        filter:
          type: string
          pattern: for <value>
          required: true
      requiredContextIsAvailable:
        options:
          types: [ Consoloid.Ui.List.Dialog.ContextObject ]
  list_further_filter_dialog:
    cls: Consoloid.Ui.List.Dialog.FurtherFilter
  list_clear_filters_sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.ContextDependSentence
    options:
      service: list_clear_filters_dialog
      patterns:
        - Clear filters
        - Stop search
        - Stop filtering
      arguments:
        name:
          type: Consoloid.Ui.List.Dialog.ContextObject
          pattern: list named <value>
          required: false
      requiredContextIsAvailable:
        options:
          types: [ Consoloid.Ui.List.Dialog.ContextObject ]
  list_clear_filters_dialog:
    cls: Consoloid.Ui.List.Dialog.ClearFilters
  file_catalogue:
    cls: Consoloid.Form.FileCatalogue
    shared: true
